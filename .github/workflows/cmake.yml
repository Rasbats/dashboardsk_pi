---
# yamllint disable rule:line-length
name: CMake

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'manual/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'manual/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu latest wxGTK 3
            runner: ubuntu-latest
            cmake_generator: Unix Makefiles
          - name: Ubuntu 18.04 wxGTK 3
            runner: ubuntu-18.04
            cmake_generator: Unix Makefiles
          - name: macOS latest wxOSX
            runner: macos-latest
            cmake_generator: Xcode
            cmake_defines: -DCMAKE_CXX_STANDARD=11 -DwxWidgets_CONFIG_EXECUTABLE=/tmp/wx315_opencpn50_macos1010/bin/wx-config -DwxWidgets_CONFIG_OPTIONS="--prefix=/tmp/wx315_opencpn50_macos1010"
          - name: macOS 10.15 wxOSX
            runner: macos-10.15
            cmake_generator: Xcode
            cmake_defines: -DCMAKE_CXX_STANDARD=11 -DwxWidgets_CONFIG_EXECUTABLE=/tmp/wx315_opencpn50_macos1010/bin/wx-config -DwxWidgets_CONFIG_OPTIONS="--prefix=/tmp/wx315_opencpn50_macos1010"
          #- name: Windows MSVC
          #  # TODO: There are some problems linking with our wx3.1.2 (Probably not worth investigating until wx3.2 switch?)
          #  runner: windows-latest
          #  no_sudo: 1
          #  cmake_defines: -DCMAKE_CXX_STANDARD=11 -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe
          #  cmake_generator: Ninja

    env:
      wxGTK_VERSION: ${{ matrix.gtk_version && matrix.gtk_version || 3 }}

    # Use bash as the shell, even under MSW where the default is PowerShell.
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Before build
        run: |
          ./ci/github-pre-build.sh

      # required for CMake to find Ninja
      - name: "[Windows] Set up MSVC Developer Command Prompt"
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-vsdevenv@v3
        with:
          host_arch: x86
          arch: win32

      - name: "[Windows] Dependencies, configure, build"
        if: runner.os == 'Windows'
        run: |
          call buildwin/win_deps.bat
          cmake -A win32 -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.cmake_defines }}
          cmake --build build
        shell: cmd

      - name: Configure CMake
        if: runner.os != 'Windows'
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.cmake_defines }}

      - name: Build
        if: runner.os != 'Windows'
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Test
        if: runner.os != 'Linux' && runner.os != 'Windows'
        # TODO: The tests do not work in headless Linux containers (GTK crashes) with wxWidgets 3.0 available in Ubuntu
        # They seem to be fine with wx 3.1 though, so we will just remove the condition "later" when wx3.2 time comes
        # On Windows, we would need opencpn.exe in the worjing directory to run the tests (and wxWidgets libs in the path)
        working-directory: build
        run: ctest -C ${{env.BUILD_TYPE}}
...
